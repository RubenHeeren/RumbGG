@page "/"
@using Client.Components
@using RiotSharp.Misc
<PageTitle>Home</PageTitle>

<BSModal @ref="_modalSummonerSummary" Size="Size.ExtraLarge" DataId="ModalSummonerSummary" ModalColor="BSColor.Dark">
    <Header>
        @if (_summoner is not null && _leagueEntry is not null)
        {
            <div class="summoner-summary-profile-card-container shadow">
                <img src="@($"//opgg-static.akamaized.net/images/profile_icons/profileIcon{_summoner.ProfileIconId}.jpg?image=q_auto:best&v=1518361200")" alt="Card image cap" />
                <h6 class="pt-2 ps-2">@_leagueEntry.SummonerName</h6>
            </div>

            <div class="summoner-summary-rank-card-container d-flex flex-column align-items-center ms-4">
                <img src="@($"https://opgg-static.akamaized.net/images/medals_new/{@_leagueEntry.Tier}.png?image=q_auto,f_webp,w_144&v=1653902315586")" alt="Card image cap" />
                <div class="">
                    <p class="m-0">Ranked Solo</p>
                    <p class="mt-1 mb-0">@_leagueEntry.Tier.ToLowerInvariant().FirstCharToUpper() @_leagueEntry.Rank @_leagueEntry.LeaguePoints LP</p>
                    <p class="mt-1">@(_leagueEntry.Wins)W / @(_leagueEntry.Losses)L</p>
                </div>
            </div>
        }
        else
        {
            <BSSpinner Color="BSColor.Secondary" />
        }
    </Header>
    <Content>
        <BSContainer Class="pt-3">
            @if (_top3MainChampionsCards is not null)
            {
                <BSRow>
                    <h1 class="mb-3">Most Played Champions</h1>

                    <BSCol>
                        <Top3MainChampionsCard Top3MainChampionsCardEntry="_top3MainChampionsCards[0]" />
                    </BSCol>

                    <BSCol>
                        <Top3MainChampionsCard Top3MainChampionsCardEntry="_top3MainChampionsCards[1]" />
                    </BSCol>

                    <BSCol>
                        <Top3MainChampionsCard Top3MainChampionsCardEntry="_top3MainChampionsCards[2]" />
                    </BSCol>
                </BSRow>
            }
            else
            {
                <BSSpinner Color="BSColor.Secondary" />
            }

            <div class="mt-5">
                <h1 class="mb-3">Match History</h1>

                @if (_matchHistoryAccordions is not null)
                {
                    @foreach (var matchHistoryAccordion in _matchHistoryAccordions)
                    {                        
                        <h5>Date and duration: @matchHistoryAccordion.MatchStartingDate - @matchHistoryAccordion.DurationInMinutes minutes</h5>
                        <h6>Match type: @matchHistoryAccordion.MatchType</h6>
                        <p>
                            @(matchHistoryAccordion.Won ? "Victory" : "Defeat")
                            <br>
                            Champion: @matchHistoryAccordion.ChampionName
                            <br>
                            KDA: @(matchHistoryAccordion.Kills)/@(matchHistoryAccordion.Deaths)/@(matchHistoryAccordion.Assists)
                        </p>
                        <hr />
                    }
                }
                else
                {
                    <BSSpinner Color="BSColor.Secondary" />
                }
            </div>

        </BSContainer>
    </Content>
    <Footer Context="modal">
        <BSButton MarginStart="Margins.Auto" Color="BSColor.Light" @onclick="modal.HideAsync">Close</BSButton>
    </Footer>
</BSModal>

<div class="d-flex justify-content-center align-items-center min-vh-88">
    <form @onsubmit="HandleSubmitAsync" class="row w-100" OnValidSubmit="HandleValidSubmitAsync">
        <div class="col-8">
            <input class="form-control me-2" type="search" placeholder="Summoner name" aria-label="Search" @bind-value="_querySummonerName" />
        </div>

        <div class="col-2">
            <select class="form-select" aria-label="Default select example" @onchange="OnChangeSummonerRegion">
                @foreach (var region in (Region[])Enum.GetValues(typeof(Region)))
                {
                    @if (region == Region.Euw)
                    {
                        <option selected value="@((int)region)">@region.ToString().ToUpperInvariant()</option>
                    }
                    else
                    {
                        <option value="@((int)region)">@region.ToString().ToUpperInvariant()</option>
                    }
                }
            </select>
        </div>

        <div class="col-1">
            <BSButton Color="BSColor.Light" IsSubmit="true">Search</BSButton>
        </div>
    </form>
</div>